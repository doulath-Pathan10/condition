
import OnboardingBeforeStart from "../commonComponents/onboarding-before-start/onboarding-before-start";
import Fields from "../../dashboard/fields/fields";
import { useState } from "react";
import { useSelector } from "react-redux";
import { StoreModel } from "../../../utils/model/common-model";
import LoanDisbursement from "../commonComponents/loanDisbursement/loan-disbursement";
import DocumentUploadSRC from "../commonComponents/documentUpload/documentUploadMain/document-upload-main-scr"; //"../../documentUpload/documentUploadMain/document-upload-main-scr";
import Submission from "../submission/submission";

const DynamicComponent: React.FC<any> = ({ isVisible, onScrollEnd, stageId, nextPage }) => {
  const [selectedLeftMenu, setSelectedLeftMenu] = useState("");
  const currentStage = useSelector((state: StoreModel) => state.preApproval.currentStage);
  // const currentStage:any = "DC";

  const renderPage = () => {
    switch (currentStage) {
      case "PD-0":
        return <OnboardingBeforeStart stageID={stageId} isVisible={isVisible} onScrollEnd={onScrollEnd} nextPage={nextPage} />
      case "PD-1":
        return <OnboardingBeforeStart stageID={stageId} isVisible={isVisible} onScrollEnd={onScrollEnd} nextPage={nextPage} />
      case "PD-2":
        return <Fields selectedLeftMenu={selectedLeftMenu} />
      // case "RP":
      //   return <ReviewPage />
      case "LD":
        return <LoanDisbursement />
      case "DC":
        return <DocumentUploadSRC />
      case "FFD":
        return <Submission />
      default:
        return <Fields selectedLeftMenu={selectedLeftMenu} />
    }
  }
  return (
    <>
      {renderPage()}
    </>
  )
}
export default DynamicComponent;

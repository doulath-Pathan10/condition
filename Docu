import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import AsiaMiles from './AsiaMiles';

describe('AsiaMiles Component', () => {
  // Test 1: Renders the component without crashing
  it('renders without crashing', () => {
    render(<AsiaMiles />);
    expect(screen.getByText('You are applying for')).toBeInTheDocument();
  });

  // Test 2: Displays the correct header information
  it('displays the correct header information', () => {
    render(<AsiaMiles />);
    expect(screen.getByText('Standard Chartered Cathay Mastercard')).toBeInTheDocument();
    expect(screen.getByText(/To apply for Standard Chartered credit card, you need to be 18\+ years old/)).toBeInTheDocument();
  });

  // Test 3: Shows all three credit card options
  it('shows all three credit card options', () => {
    render(<AsiaMiles />);
    expect(screen.getAllByText('Select').length).toBe(3);
    expect(screen.getByText('Standard Chartered Cathay Mastercard')).toBeInTheDocument();
    expect(screen.getByText('Standard Chartered Cathay Mastercard – Priority Banking')).toBeInTheDocument();
    expect(screen.getByText('Standard Chartered Cathay Mastercard – Priority Private')).toBeInTheDocument();
  });

  // Test 4: Allows selecting a card
  it('allows selecting a card', () => {
    render(<AsiaMiles />);
    const selectButtons = screen.getAllByText('Select');
    fireEvent.click(selectButtons[0]);
    expect(screen.getByText('Selected')).toBeInTheDocument();
    expect(screen.getAllByText('Select').length).toBe(2); // Only 2 left since one is now selected
  });

  // Test 5: Enables the "OK, NEXT" button only when a card is selected
  it('enables the "OK, NEXT" button only when a card is selected', () => {
    render(<AsiaMiles />);
    const nextButton = screen.getByText('OK, NEXT');
    expect(nextButton).toBeDisabled();
    
    const selectButtons = screen.getAllByText('Select');
    fireEvent.click(selectButtons[0]);
    expect(nextButton).not.toBeDisabled();
  });

  // Test 6: Displays card benefits correctly
  it('displays card benefits correctly', () => {
    render(<AsiaMiles />);
    expect(screen.getByText(/Enjoy up to 60,000 Asia Miles Welcome Offer/)).toBeInTheDocument();
    expect(screen.getByText(/HKD4 = 1 Asia Mile for eligible spending on dining, hotels, and overseas category/)).toBeInTheDocument();
    expect(screen.getByText(/First Year Annual Fee Waiver/)).toBeInTheDocument();
  });

  // Test 7: Shows the footer message
  it('shows the footer message', () => {
    render(<AsiaMiles />);
    expect(screen.getByText(/Your Integrated Deposit Account and Banking Plan application would be handled/)).toBeInTheDocument();
  });

  // Test 8: Handles card selection and deselection
  it('handles card selection and deselection', () => {
    render(<AsiaMiles />);
    const selectButtons = screen.getAllByText('Select');
    
    // Select first card
    fireEvent.click(selectButtons[0]);
    expect(screen.getByText('Selected')).toBeInTheDocument();
    
    // Select second card - first should no longer be selected
    fireEvent.click(selectButtons[1]);
    expect(screen.getAllByText('Selected').length).toBe(1);
    expect(screen.getAllByText('Select').length).toBe(2);
  });

  // Test 9: Card images are rendered
  it('renders card images', () => {
    render(<AsiaMiles />);
    const images = screen.getAllByRole('img');
    expect(images.length).toBe(3); // One for each card
    images.forEach(img => {
      expect(img).toHaveAttribute('src');
    });
  });

  // Test 10: Clicking "OK, NEXT" triggers the buttonclick function
  it('triggers buttonclick when "OK, NEXT" is clicked', () => {
    // Mock window.open
    const mockOpen = jest.fn();
    Object.defineProperty(window, 'open', { value: mockOpen, writable: true });

    render(<AsiaMiles />);
    
    // Select a card first
    const selectButtons = screen.getAllByText('Select');
    fireEvent.click(selectButtons[0]);
    
    const nextButton = screen.getByText('OK, NEXT');
    fireEvent.click(nextButton);
    
    expect(mockOpen).toHaveBeenCalled();
  });
});
